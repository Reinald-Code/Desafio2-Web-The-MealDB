---
// Definimos las interfaces TypeScript para manejar los datos de las recetas
interface Meal {
  idMeal: string;           // Identificador único de la receta
  strMeal: string;          // Nombre de la receta
  strMealThumb: string;     // URL de la imagen en miniatura
  strInstructions?: string; // Instrucciones de preparación (opcional)
}

// Importamos los componentes necesarios para construir la página
import Layout from '../layouts/Layout.astro';
import MealCard from '../components/MealCard.jsx';
import SearchBar from '../components/SearchBar.jsx';

// Función que obtiene una receta aleatoria de la API
async function getRandomMeal(): Promise<Meal> {
  const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');
  const data = await response.json();
  return data.meals[0];
}
// Obtenemos 15 recetas aleatorias
const mealPromises = Array(15).fill(null).map(() => getRandomMeal());
const meals: Meal[] = await Promise.all(mealPromises);

// Eliminamos posibles recetas duplicadas
const uniqueMeals = Array.from(new Map(meals.map(meal => [meal.idMeal, meal])).values());

---

<Layout title="Inicio - Recetas del Mundo">
  <div class="px-40 flex flex-1 justify-center py-5">
    <div class="layout-content-container flex flex-col max-w-[960px] flex-1">
      <div class="px-4 py-3">
        <label class="flex flex-col min-w-40 h-12 w-full">
          <div class="flex w-full flex-1 items-stretch rounded-lg h-full">
            <div
              class="text-[#994d51] flex border-none bg-[#f3e7e8] items-center justify-center pl-4 rounded-l-lg border-r-0"
            >
              <svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="currentColor" viewBox="0 0 256 256">
                <path
                  d="M229.66,218.34l-50.07-50.06a88.11,88.11,0,1,0-11.31,11.31l50.06,50.07a8,8,0,0,0,11.32-11.32ZM40,112a72,72,0,1,1,72,72A72.08,72.08,0,0,1,40,112Z"
                ></path>
              </svg>
            </div>
            <SearchBar client:only="react" />
          </div>
        </label>
      </div>
      <h2 class="text-[#1b0e0e] text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5">Recetas Aleatorias</h2>
      <div class="grid grid-cols-[repeat(auto-fit,minmax(158px,1fr))] gap-3 p-4">
        {uniqueMeals.map((meal) => (
          <a href={`/meal/${meal.idMeal}`} class="flex flex-col gap-3 pb-3 group cursor-pointer">
            <div
              class="w-full bg-center bg-no-repeat aspect-square bg-cover rounded-lg group-hover:scale-105 transition-transform duration-200"
              style={`background-image: url("${meal.strMealThumb}");`}
            ></div>
            <div>
              <p class="text-[#1b0e0e] text-base font-medium leading-normal group-hover:text-[#994d51] transition-colors">{meal.strMeal}</p>
              <p class="text-[#994d51] text-sm font-normal leading-normal">
                Ver receta completa
              </p>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</Layout>