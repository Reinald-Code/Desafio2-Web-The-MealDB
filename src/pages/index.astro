---
// Importamos los componentes necesarios para construir la página
import Layout from '../layouts/Layout.astro';

// Definimos las interfaces TypeScript para manejar los datos de las recetas
interface Meal {
  idMeal: string;           // Identificador único de la receta
  strMeal: string;          // Nombre de la receta
  strMealThumb: string;     // URL de la imagen en miniatura
  strInstructions?: string; // Instrucciones de preparación (opcional)
}

const getRandomMeal = async () => {
  try {
    const response = await fetch('https://www.themealdb.com/api/json/v1/1/random.php');
    
    if (!response.ok) {
      console.error(`Error HTTP: ${response.status}`);
      return null;
    }
    
    const data = await response.json();
    
    if (!data?.meals?.[0]) {
      console.error('Estructura de datos inesperada:', data);
      return null;
    }
    
    return data.meals[0] as Meal;
  } catch (error) {
    if (error instanceof Error) {
      console.error('Error al obtener receta aleatoria:', error.message);
    }
    return null;
  }
};

const getUniqueMeals = async (count: number) => {
  const meals = [] as Meal[];
  const seenIds = new Set<string>();
  let attempts = 0;
  const maxAttempts = count * 3;
  
  while (meals.length < count && attempts < maxAttempts) {
    attempts++;
    const meal = await getRandomMeal();
    
    if (meal && !seenIds.has(meal.idMeal)) {
      seenIds.add(meal.idMeal);
      meals.push(meal);
    }
  }
  
  return meals;
};

const uniqueMeals = await getUniqueMeals(15);
---

<Layout title="Inicio - Esencia Culinaria">
  <div class="px-40 flex flex-1 justify-center py-5">
    <div class="layout-content-container flex flex-col max-w-[960px] flex-1">
      <h2 class="text-[#1b0e0e] text-[22px] font-bold leading-tight tracking-[-0.015em] px-4 pb-3 pt-5">
        Recetas Del Día
      </h2>
      
      {uniqueMeals.length > 0 ? (
        <div class="grid grid-cols-[repeat(auto-fit,minmax(158px,1fr))] gap-3 p-4">
          {uniqueMeals.map((meal) => (
            <a 
              href={`/meal/${meal.idMeal}`} 
              class="flex flex-col gap-3 pb-3 group cursor-pointer"
            >
              <div
                class="w-full bg-center bg-no-repeat aspect-square bg-cover rounded-lg group-hover:scale-105 transition-transform duration-200"
                style={`background-image: url("${meal.strMealThumb}");`}
              ></div>
              <div>
                <p class="text-[#1b0e0e] text-base font-medium leading-normal group-hover:text-[#994d51] transition-colors">
                  {meal.strMeal}
                </p>
                <p class="text-[#994d51] text-sm font-normal leading-normal">
                  Ver receta completa
                </p>
              </div>
            </a>
          ))}
        </div>
      ) : (
        <div class="flex flex-col items-center justify-center p-8">
          <p class="text-[#994d51] text-lg font-medium mb-2">
            No se pudieron cargar las recetas
          </p>
          <p class="text-[#1b0e0e] text-sm">
            Por favor, recarga la página para intentar nuevamente
          </p>
        </div>
      )}
    </div>
  </div>
</Layout>