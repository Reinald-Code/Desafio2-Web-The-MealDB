---
import Layout from '../../layouts/Layout.astro';
import MealCard from '../../components/MealCard.jsx';

// Obtenemos el nombre de la categoría desde la URL (ej: /category/Beef -> category = "Beef")
const { category } = Astro.params;

// Verificamos que category existe
if (!category) {
  return Astro.redirect('/categories');
}

// Hacemos la llamada a la API para obtener las comidas de esa categoría
let meals: any[] = [];
let error = '';

try {
  const response = await fetch(
    `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`
  );
  if (!response.ok) {
    throw new Error(`HTTP error! status: ${response.status}`);
  }
  const data = await response.json();
  meals = data.meals || []; // Usamos || [] por si no hay resultados
} catch (e) {
  error = `Error al cargar recetas: ${e instanceof Error ? e.message : 'Error desconocido'}`;
  console.error('Error fetching meals:', e);
}
---

<Layout title={`Recetas de ${category}`}>
  <div class="container mx-auto px-4 py-8">
    <div class="flex items-center mb-6">
      <a href="/categories" class="bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600">
        ← Volver a Categorías
      </a>
      <h1 class="text-3xl font-bold ml-4">Categoría: {category}</h1>
    </div>

    {error && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-8">
        <p class="font-bold">Error:</p>
        <p>{error}</p>
        <p class="mt-2">Por favor, verifica tu conexión a internet e intenta recargar la página.</p>
      </div>
    )}

    {
      meals.length > 0 ? (
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
          {meals.map((meal: any) => (
            <MealCard client:load meal={meal} />
          ))}
        </div>
      ) : !error ? (
        <p class="text-center text-gray-500">No se encontraron recetas en esta categoría.</p>
      ) : null
    }
  </div>
</Layout>