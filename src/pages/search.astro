---
import Layout from '../layouts/Layout.astro';
import MealCard from '../components/MealCard.jsx';

// Definimos cómo es un objeto Meal
interface Meal {
  idMeal: string;
  strMeal: string;
  strMealThumb: string;
  strArea: string;
}

const query = Astro.url.searchParams.get('q');
let meals: Meal[] = []; // Le decimos que 'meals' será un array de 'Meal'

if (query) {
  const response = await fetch(
    `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`
  );
  const data = await response.json();
  meals = data.meals || [];
}
---
<!-- El resto del código HTML no cambia... -->
<Layout title={`Resultados para "${query}"`}>
  <div class="flex items-center mb-6">
    <a href="/" class="bg-orange-500 text-white py-2 px-4 rounded hover:bg-orange-600">
      ← Volver a Inicio
    </a>
    <h1 class="text-3xl font-bold ml-4">
      Buscando: <span class="text-orange-600">{query}</span>
    </h1>
  </div>
  {
    meals && meals.length > 0 ? (
      <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
        {meals.map((meal) => ( // Ahora TypeScript sabe que 'meal' es de tipo 'Meal'
          <MealCard client:load meal={meal} />
        ))}
      </div>
    ) : (
      <p class="text-center text-2xl text-gray-500 mt-10">
        No se encontraron recetas para "{query}". Intenta con otro término.
      </p>
    )
  }
</Layout>